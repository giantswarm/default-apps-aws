clusterName: ""
organization: ""
baseDomain: ""

userConfig:
  certManager:
    configMap:
      values:
        # cert-manager's DNS01 solver by default tries to reach authoritative nameservers directly, using
        # their public IPs. Since those are not reachable from private clusters, we instead rely on the
        # recursive nameserver (for AWS, that's normally the default nameserver requested in EC2 instances).
        dns01RecursiveNameserversOnly: true
        ingressShim:
          defaultIssuerName: letsencrypt-giantswarm
          defaultIssuerKind: ClusterIssuer
          defaultIssuerGroup: cert-manager.io
        ciliumNetworkPolicy:
          enabled: true
  cluster-autoscaler:
    configMap:
      values:
        serviceAccount:
          annotations:
            eks.amazonaws.com/role-arn: "{{ .Values.clusterName }}-cluster-autoscaler-role"
  externalDns:
    configMap:
      values:
        provider: aws
        aws:
          irsa: "true"
          batchChangeInterval: null
        serviceAccount:
          annotations:
            eks.amazonaws.com/role-arn: "{{ .Values.clusterName }}-Route53Manager-Role"
        domainFilters:
          - '{{ include "baseDomain" . }}'
        txtOwnerId: giantswarm-io-external-dns
        txtPrefix: "{{ .Values.clusterName }}"
        registry: txt
        annotationFilter: giantswarm.io/external-dns=managed
        sources:
          - service
        extraArgs:
          - "--aws-batch-change-interval=10s"
        ciliumNetworkPolicy:
          enabled: true
  metricsServer:
    configMap:
      values:
        ciliumNetworkPolicy:
          enabled: true
  netExporter:
    configMap:
      values:
        NetExporter:
          NTPServers: 169.254.169.123
        ciliumNetworkPolicy:
          enabled: true
  etcdKubernetesResourceCountExporter:
    configMap:
      values:
        etcd:
          hostPath: "/etc/kubernetes/pki/etcd/"
          cacertpath: "/certs/ca.crt"
          certpath: "/certs/server.crt"
          keypath: "/certs/server.key"
          prefix: "/registry/"
        events:
          prefix: "/registry/events/"

apps:
  aws-pod-identity-webhook:
    appName: aws-pod-identity-webhook
    chartName: aws-pod-identity-webhook
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    dependsOn: cert-manager  # since aws-pod-identity-webhook installs a `Certificate` object
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/aws-pod-identity-webhook
    version: 1.14.2
  capi-node-labeler:
    appName: capi-node-labeler
    chartName: capi-node-labeler
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/capi-node-labeler-app
    version: 0.5.0
  certExporter:
    appName: cert-exporter
    chartName: cert-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-exporter
    version: 2.9.0
  certManager:
    appName: cert-manager
    chartName: cert-manager-app
    catalog: default
    enabled: true
    clusterValues:
      configMap: true
      secret: true
    dependsOn: prometheus-operator-crd
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-manager-app
    version: 3.7.4
  chartOperatorExtensions:
    appName: chart-operator-extensions
    chartName: chart-operator-extensions
    catalog: default
    enabled: true
    clusterValues:
      configMap: false
      secret: false
    dependsOn: prometheus-operator-crd
    namespace: giantswarm
    # used by renovate
    # repo: giantswarm/chart-operator-extensions
    version: 1.1.2
  ciliumServiceMonitors:
    appName: cilium-servicemonitors
    chartName: cilium-servicemonitors
    catalog: default
    enabled: true
    clusterValues:
      configMap: false
      secret: false
    dependsOn: prometheus-operator-crd
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cilium-servicemonitors-app
    version: 0.1.2
  cluster-autoscaler:
    appName: cluster-autoscaler
    chartName: cluster-autoscaler-app
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cluster-autoscaler-app
    version: 1.27.3-gs8
  externalDns:
    appName: external-dns
    chartName: external-dns-app
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/external-dns-app
    version: 3.1.0
  k8sDnsNodeCache:
    appName: k8s-dns-node-cache
    chartName: k8s-dns-node-cache-app
    catalog: default
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/k8s-dns-node-cache-app
    version: 2.6.1
  metricsServer:
    appName: metrics-server
    chartName: metrics-server-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/metrics-server-app
    version: 2.4.2
  netExporter:
    appName: net-exporter
    chartName: net-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/net-exporter
    version: 1.18.2
  nodeExporter:
    appName: node-exporter
    chartName: node-exporter-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    dependsOn: prometheus-operator-crd
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/node-exporter-app
    version: 1.19.0
  vpa:
    appName: vertical-pod-autoscaler
    chartName: vertical-pod-autoscaler-app
    catalog: default
    dependsOn: prometheus-operator-crd
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/vertical-pod-autoscaler-app
    version: 5.1.0
  observabilityBundle:
    # Includes prometheus-operator-crd
    appName: observability-bundle
    chartName: observability-bundle
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    inCluster: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/observability-bundle
    version: 1.3.4
  securityBundle:
    appName: security-bundle
    chartName: security-bundle
    catalog: giantswarm
    clusterValues:
      configMap: true
      secret: false
    dependsOn: prometheus-operator-crd
    enabled: true
    inCluster: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/security-bundle
    version: 1.6.2
  teleport-kube-agent:
    appName: teleport-kube-agent
    chartName: teleport-kube-agent
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/teleport-kube-agent-app
    version: 0.7.1
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs:
      - kind: configMap
        name: "{{ $.Values.clusterName }}-teleport-kube-agent-config"
        namespace: "{{ $.Release.Namespace }}"
  etcdKubernetesResourceCountExporter:
    appName: etcd-k8s-res-count-exporter
    chartName: etcd-kubernetes-resources-count-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/etcd-kubernetes-resources-count-exporter
    version: 1.10.0
