clusterName: ""
organization: ""

userConfig:
  certManager:
    configMap:
      values: |
        # cert-manager-app v2.x.x
        controller:
          extraArgs:
            # cert-manager's DNS01 solver by default tries to reach authoritative nameservers directly, using
            # their public IPs. Since those are not reachable from private clusters, we instead rely on the
            # recursive nameserver (for AWS, that's normally the default nameserver requested in EC2 instances).
            #
            # Without this, we get an error like
            #
            #   cert-manager/challenges "msg"="propagation check failed" "error"="dial tcp 205.251.194.0:53: i/o timeout"
            #
            # where the IP is an AWS nameserver, and DNS-over-TCP is attempted after UDP has failed before.
            #
            # For public clusters, this setting should have no effect, as they can use the HTTP01 solver.
            - --dns01-recursive-nameservers-only
        # cert-manager-app v3.x.x
        # cert-manager's DNS01 solver by default tries to reach authoritative nameservers directly, using
        # their public IPs. Since those are not reachable from private clusters, we instead rely on the
        # recursive nameserver (for AWS, that's normally the default nameserver requested in EC2 instances).
        #
        # Without this, we get an error like
        #
        #   cert-manager/challenges "msg"="propagation check failed" "error"="dial tcp 205.251.194.0:53: i/o timeout"
        #
        # where the IP is an AWS nameserver, and DNS-over-TCP is attempted after UDP has failed before.
        #
        # For public clusters, this setting should have no effect, as they can use the HTTP01 solver.
        dns01RecursiveNameserversOnly: true
  externalDns:
    configMap:
      values: |
        provider: aws
        aws:
          irsa: "true"
          batchChangeInterval: null
        serviceAccount:
          annotations:
            eks.amazonaws.com/role-arn: {{ .Values.clusterName }}-Route53Manager-Role
        domainFilters:
          - {{ .Values.baseDomain }}
        txtOwnerId: giantswarm-io-external-dns
        txtPrefix: {{ .Values.clusterName }}
        annotationFilter: giantswarm.io/external-dns=managed
        sources:
          - service
        extraArgs:
          - "--aws-batch-change-interval=10s"
  netExporter:
    configMap:
      values: |
        NetExporter:
          NTPServers: 169.254.169.123
  etcdKubernetesResourceCountExporter:
    configMap:
      values: |
        etcd:
          hostPath: "/etc/kubernetes/pki/etcd/"
          cacertpath: "/certs/ca.crt"
          certpath: "/certs/server.crt"
          keypath: "/certs/server.key"
          prefix: "/registry/"
        events:
          prefix: "/registry/events/"

apps:
  aws-pod-identity-webhook:
    appName: aws-pod-identity-webhook
    chartName: aws-pod-identity-webhook
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/aws-pod-identity-webhook
    version: 1.11.1
  capi-node-labeler:
    appName: capi-node-labeler
    chartName: capi-node-labeler
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/capi-node-labeler-app
    version: 0.3.4
  certExporter:
    appName: cert-exporter
    chartName: cert-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-exporter
    version: 2.6.0
  certManager:
    appName: cert-manager
    chartName: cert-manager-app
    catalog: default
    enabled: true
    clusterValues:
      configMap: true
      secret: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/cert-manager-app
    version: 3.1.0
  externalDns:
    appName: external-dns
    chartName: external-dns-app
    catalog: default
    clusterValues:
      configMap: true
      secret: true
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/external-dns-app
    version: 2.38.0
  metricsServer:
    appName: metrics-server
    chartName: metrics-server-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/metrics-server-app
    version: 2.2.0
  netExporter:
    appName: net-exporter
    chartName: net-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/net-exporter
    version: 1.17.0
  nodeExporter:
    appName: node-exporter
    chartName: node-exporter-app
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/node-exporter-app
    version: 1.16.1
  vpa:
    appName: vertical-pod-autoscaler
    chartName: vertical-pod-autoscaler-app
    catalog: default
    dependsOn: prometheus-operator-crd
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/vertical-pod-autoscaler-app
    version: 3.5.3
  observabilityBundle:
    appName: observability-bundle
    chartName: observability-bundle
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: false
    inCluster: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/observability-bundle
    version: 0.7.2
  teleport-kube-agent:
    appName: teleport-kube-agent
    chartName: teleport-kube-agent
    catalog: default-test
    clusterValues:
      configMap: true
      secret: true
    enabled: true
    forceUpgrade: true
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/teleport-kube-agent-app
    version: 0.4.0-3d50323eb0a698ec9ca11f6bc09e08c13fac6136
    # a list of extraConfigs for the App,
    # It can be secret or configmap
    # https://github.com/giantswarm/rfc/tree/main/multi-layer-app-config#example
    extraConfigs:
      - kind: configMap
        name: "{{ $.Values.clusterName }}-teleport-kube-agent-config"
        namespace: "{{ $.Release.Namespace }}"
  etcdKubernetesResourceCountExporter:
    appName: etcd-kubernetes-resources-count-exporter
    chartName: etcd-kubernetes-resources-count-exporter
    catalog: default
    clusterValues:
      configMap: true
      secret: false
    enabled: true
    forceUpgrade: false
    namespace: kube-system
    # used by renovate
    # repo: giantswarm/etcd-kubernetes-resources-count-exporter
    version: 1.3.0
